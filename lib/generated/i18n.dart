import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static S current;

  static const GeneratedLocalizationsDelegate delegate =
    GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get Button_Login => "Login";
  String get Button_Next => "Next";
  String get Button_Register => "Register";
  String get ChangeData_Button_Update => "Update";
  String get ChangeData_Msg_Error => "Error";
  String get ChangeData_Msg_Sucess => "Sucess";
  String get DrawerPark_Desc_Return => "Return";
  String get DrawerPark_Desc_Settings => "Settings Park";
  String get DrawerPark_Title_Return => "Return";
  String get DrawerPark_Title_Settings => "Settings Park";
  String get DrawerPerson_Desc_ChangeData => "Go to change user";
  String get DrawerPerson_Desc_Home => "Go to Home";
  String get DrawerPerson_Desc_Logout => "Exit system";
  String get DrawerPerson_Desc_Park => "Create Park";
  String get DrawerPerson_Desc_Payments => "Go to Payments";
  String get DrawerPerson_Desc_Reports => "Go to Reports";
  String get DrawerPerson_Title_ChangeData => "Change User";
  String get DrawerPerson_Title_Home => "Home";
  String get DrawerPerson_Title_Logout => "Logout";
  String get DrawerPerson_Title_Park => "Parks";
  String get DrawerPerson_Title_Payments => "Payments";
  String get DrawerPerson_Title_Reports => "Reports";
  String get ForgotPassword_Button_RecoverPass => "Recover Password";
  String get ForgotPassword_Email => "Email";
  String get ForgotPassword_Placeholder_Email => "Type your password";
  String get Home_CreatePark => "Create a new Park";
  String get Home_NoPark => "Don't Have Park's";
  String get InfRegisterPark_Welcome_Title => "Register Park";
  String get InfRegisterPerson_Welcome_Title => "Register Person";
  String get InfRegisterStreetPark_Welcome_Title => "Register Street Park";
  String get InfRegisterUser_Welcome_Title => "User Information";
  String get InfWelcome_Button_SignIn => "Sign In";
  String get InfWelcome_Button_SignUp => "Sign up";
  String get InfWelcome_Button_Welcome => "Welcome";
  String get Login_Email => "Email";
  String get Login_Error_User => "Error User";
  String get Login_ForgotPass => "Forgot Password";
  String get Login_Pass => "Password";
  String get Login_Placeholder_Email => "Type your email";
  String get Login_Placeholder_Pass => "Type your password";
  String get Login_Register_New => "New User";
  String get RegisterPark_BusinessName => "Business Name";
  String get RegisterPark_Button_RegisterPark => "Register Park";
  String get RegisterPark_City => "City";
  String get RegisterPark_Country => "Country";
  String get RegisterPark_Doc => "Doc";
  String get RegisterPark_Msg_BusinessName => "Business name is required";
  String get RegisterPark_Msg_City => "City is required";
  String get RegisterPark_Msg_Country => "Country is required";
  String get RegisterPark_Msg_Doc => "Doc is required";
  String get RegisterPark_Msg_NamePark => "Name Park is required";
  String get RegisterPark_Msg_Number => "Number is required";
  String get RegisterPark_Msg_PostalCode => "Postal Code is required";
  String get RegisterPark_Msg_State => "State is required";
  String get RegisterPark_Msg_Street => "Street is required";
  String get RegisterPark_NamePark => "Name Park";
  String get RegisterPark_Number => "Number";
  String get RegisterPark_Placeholder_BusinessName => "Type your business name";
  String get RegisterPark_Placeholder_City => "Type your city";
  String get RegisterPark_Placeholder_Country => "Type your country";
  String get RegisterPark_Placeholder_Doc => "Type your doc";
  String get RegisterPark_Placeholder_NamePark => "Type your name park";
  String get RegisterPark_Placeholder_Number => "Type your number";
  String get RegisterPark_Placeholder_PostalCode => "Type your postal code";
  String get RegisterPark_Placeholder_State => "Type your state";
  String get RegisterPark_Placeholder_Street => "Type your street";
  String get RegisterPark_PostalCode => "Postal Code";
  String get RegisterPark_State => "State";
  String get RegisterPark_Street => "Street";
  String get RegisterUser_Birthday => "Birthday";
  String get RegisterUser_Cel => "Cel";
  String get RegisterUser_Doc => "Document";
  String get RegisterUser_Email => "Email";
  String get RegisterUser_Gender => "Gender";
  String get RegisterUser_LastName => "Last Name";
  String get RegisterUser_Msg_Birthday => "Birthday is required";
  String get RegisterUser_Msg_Cel => "Cel is required";
  String get RegisterUser_Msg_Doc => "Doc is required";
  String get RegisterUser_Msg_Gender => "Gender is required";
  String get RegisterUser_Msg_Pass => "Password is required";
  String get RegisterUser_Name => "Name";
  String get RegisterUser_Pass => "Password";
  String get RegisterUser_Placeholder_Birthday => "Birthday (Year/Month/Day)";
  String get RegisterUser_Placeholder_Cel => "Type your cel";
  String get RegisterUser_Placeholder_Doc => "Type your Doc";
  String get RegisterUser_Placeholder_Email => "Type your email";
  String get RegisterUser_Placeholder_Gender => "Type you gender";
  String get RegisterUser_Placeholder_LastName => "Type your Last Name";
  String get RegisterUser_Placeholder_Name => "Type your name";
  String get RegisterUser_Placeholder_Pass => "Type your password";
  String get Register_Msg_Email => "Email is required";
  String get Register_Msg_LastName => "Last Name is required";
  String get Register_Msg_Name => "Name is requerid";
}

class $pt extends S {
  const $pt();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get RegisterUser_Name => "Nome";
  @override
  String get ChangeData_Button_Update => "Atualizar";
  @override
  String get RegisterUser_Placeholder_LastName => "Digite seu sobrenome";
  @override
  String get DrawerPerson_Desc_Logout => "Sistema de saída";
  @override
  String get RegisterPark_Placeholder_State => "Digite seu estado";
  @override
  String get DrawerPerson_Title_Logout => "Sair";
  @override
  String get RegisterPark_Msg_BusinessName => "O nome da empresa é obrigatório";
  @override
  String get RegisterPark_Placeholder_PostalCode => "Digite seu CEP";
  @override
  String get RegisterUser_Placeholder_Birthday => "Aniversário (Ano / Mês / Dia)";
  @override
  String get RegisterPark_BusinessName => "Nome da empresa";
  @override
  String get Login_ForgotPass => "Esqueceu a senha";
  @override
  String get InfRegisterStreetPark_Welcome_Title => "Register Street Park";
  @override
  String get RegisterPark_City => "Cidade";
  @override
  String get RegisterPark_Country => "País";
  @override
  String get RegisterUser_Msg_Birthday => "O aniversário é obrigatório";
  @override
  String get Button_Next => "Próximo";
  @override
  String get RegisterPark_Placeholder_Number => "Digite seu número";
  @override
  String get ForgotPassword_Button_RecoverPass => "Recuperar Senha";
  @override
  String get InfWelcome_Button_Welcome => "Bem vinda(o)";
  @override
  String get DrawerPerson_Title_ChangeData => "Mudar usuário";
  @override
  String get RegisterPark_Number => "Número";
  @override
  String get DrawerPerson_Title_Home => "Inicio";
  @override
  String get InfWelcome_Button_SignUp => "Cadastre - se";
  @override
  String get DrawerPark_Title_Settings => "Settings Park";
  @override
  String get RegisterUser_Placeholder_Email => "Digite seu email";
  @override
  String get RegisterUser_Msg_Pass => "Senha requerida";
  @override
  String get RegisterUser_LastName => "Último nome";
  @override
  String get RegisterUser_Doc => "CPF";
  @override
  String get RegisterUser_Gender => "Gênero";
  @override
  String get RegisterPark_Msg_Street => "Rua é obrigatória";
  @override
  String get Login_Email => "O email";
  @override
  String get Login_Placeholder_Email => "Digite seu email";
  @override
  String get Login_Register_New => "Novo usuário";
  @override
  String get ChangeData_Msg_Error => "Erro";
  @override
  String get RegisterPark_Msg_NamePark => "O nome de estacionamento é obrigatório";
  @override
  String get RegisterUser_Placeholder_Gender => "Digite seu sexo";
  @override
  String get RegisterUser_Msg_Gender => "O sexo é obrigatório";
  @override
  String get Button_Register => "Registro";
  @override
  String get RegisterPark_Msg_Country => "País é obrigatório";
  @override
  String get Register_Msg_Email => "E-mail é obrigatório";
  @override
  String get InfWelcome_Button_SignIn => "Entrar";
  @override
  String get RegisterPark_Msg_City => "Cidade é obrigatória";
  @override
  String get Button_Login => "Entrar";
  @override
  String get RegisterUser_Cel => "Celular";
  @override
  String get DrawerPerson_Desc_Reports => "Ir para Relatórios";
  @override
  String get ForgotPassword_Placeholder_Email => "Digite sua senha";
  @override
  String get RegisterPark_Msg_State => "Estado é obrigatório";
  @override
  String get DrawerPerson_Desc_Payments => "Vá para Pagamentos";
  @override
  String get RegisterUser_Birthday => "Aniversário";
  @override
  String get RegisterUser_Pass => "Senha";
  @override
  String get RegisterPark_Placeholder_City => "Digite sua cidade";
  @override
  String get ForgotPassword_Email => "Email";
  @override
  String get DrawerPerson_Desc_ChangeData => "Ir para alterar usuário";
  @override
  String get RegisterUser_Placeholder_Name => "Digite seu nome";
  @override
  String get DrawerPark_Desc_Return => "Return";
  @override
  String get ChangeData_Msg_Sucess => "Sucesso";
  @override
  String get RegisterPark_Msg_Doc => "CNPJ é obrigatório";
  @override
  String get Login_Placeholder_Pass => "Digite sua senha";
  @override
  String get RegisterPark_NamePark => "Nome Estacionamento";
  @override
  String get RegisterUser_Placeholder_Doc => "Digite seu CPF";
  @override
  String get InfRegisterPark_Welcome_Title => "Register Park";
  @override
  String get RegisterPark_PostalCode => "CEP";
  @override
  String get RegisterPark_Placeholder_Street => "Digite sua rua";
  @override
  String get DrawerPark_Desc_Settings => "Settings Park";
  @override
  String get Home_NoPark => "Não Existe Estacionamentos para Este Usuario";
  @override
  String get RegisterPark_Placeholder_Doc => "Digite seu CNPJ";
  @override
  String get RegisterPark_State => "Estado";
  @override
  String get RegisterUser_Email => "O email";
  @override
  String get RegisterUser_Placeholder_Pass => "Digite sua senha";
  @override
  String get RegisterPark_Button_RegisterPark => "Registrar Estacionamento";
  @override
  String get RegisterUser_Msg_Doc => "CPF é obrigatório";
  @override
  String get RegisterUser_Placeholder_Cel => "Digite seu celular";
  @override
  String get RegisterPark_Msg_Number => "Número é obrigatório";
  @override
  String get RegisterPark_Placeholder_BusinessName => "Digite o nome da sua empresa";
  @override
  String get Register_Msg_Name => "O nome é requerido";
  @override
  String get DrawerPerson_Title_Payments => "Pagamentos";
  @override
  String get DrawerPerson_Title_Park => "Estacionamentos";
  @override
  String get DrawerPark_Title_Return => "Return";
  @override
  String get InfRegisterUser_Welcome_Title => "Informação do usuário";
  @override
  String get InfRegisterPerson_Welcome_Title => "Registrar Pessoa";
  @override
  String get RegisterPark_Street => "Rua";
  @override
  String get Home_CreatePark => "Criar novo Estacionamento";
  @override
  String get RegisterPark_Placeholder_NamePark => "Digite seu nome do Estacionamento";
  @override
  String get Login_Error_User => "Usuário com erro";
  @override
  String get DrawerPerson_Desc_Park => "Criar Estacionamento";
  @override
  String get Login_Pass => "Senha";
  @override
  String get RegisterUser_Msg_Cel => "Celular é obrigatório";
  @override
  String get RegisterPark_Msg_PostalCode => "CEP é obrigatório";
  @override
  String get Register_Msg_LastName => "O sobrenome é obrigatório";
  @override
  String get RegisterPark_Placeholder_Country => "Digite seu país";
  @override
  String get DrawerPerson_Title_Reports => "Relatórios";
  @override
  String get RegisterPark_Doc => "CNPJ";
  @override
  String get DrawerPerson_Desc_Home => "Ir para a página inicial";
}

class $en extends S {
  const $en();
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("pt", ""),
      Locale("en", ""),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback, bool withCountry = true}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported, withCountry);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback, bool withCountry = true}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported, withCountry);
    };
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "pt":
          S.current = const $pt();
          return SynchronousFuture<S>(S.current);
        case "en":
          S.current = const $en();
          return SynchronousFuture<S>(S.current);
        default:
          // NO-OP.
      }
    }
    S.current = const S();
    return SynchronousFuture<S>(S.current);
  }

  @override
  bool isSupported(Locale locale) => _isSupported(locale, true);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;

  ///
  /// Internal method to resolve a locale from a list of locales.
  ///
  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported, bool withCountry) {
    if (locale == null || !_isSupported(locale, withCountry)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  ///
  /// Returns true if the specified locale is supported, false otherwise.
  ///
  bool _isSupported(Locale locale, bool withCountry) {
    if (locale != null) {
      for (Locale supportedLocale in supportedLocales) {
        // Language must always match both locales.
        if (supportedLocale.languageCode != locale.languageCode) {
          continue;
        }

        // If country code matches, return this locale.
        if (supportedLocale.countryCode == locale.countryCode) {
          return true;
        }

        // If no country requirement is requested, check if this locale has no country.
        if (true != withCountry && (supportedLocale.countryCode == null || supportedLocale.countryCode.isEmpty)) {
          return true;
        }
      }
    }
    return false;
  }
}

String getLang(Locale l) => l == null
  ? null
  : l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
